repeat wait() until game:IsLoaded()
repeat wait() until game:GetService("Players")
repeat wait() until game:GetService("Players").LocalPlayer
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui
repeat wait() until game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local plr = Players.LocalPlayer
local hmr = plr.Character:FindFirstChild("HumanoidRootPart")

function TP(Pos)
    if not plr or not Pos then return end

    local character = plr.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") or not character:FindFirstChild("Humanoid") then return end

    if character.Humanoid.Health > 0 then
        character.HumanoidRootPart.CFrame = Pos
    end
end

local plr = game.Players.LocalPlayer

local CustomDistance = _G.CustomDistance or 2000
local PosMob = {}

spawn(function()
    while wait() do
        pcall(function()
            for _, v in pairs(Workspace.Objects.Mobs:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    if (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= CustomDistance then
                        sethiddenproperty(plr, "SimulationRadius", math.huge)
                        v.Humanoid.Health = 0
                    end
                end
            end
        end)
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            for _, v in pairs(Workspace.Objects.Mobs:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    TP(v.HumanoidRootPart.CFrame)
                    PosMob = v.HumanoidRootPart.CFrame
                end
            end
        end)
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            for _, v in pairs(Workspace.Objects.Mobs:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    if (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= CustomDistance then
                        if PosMob then
                            v.HumanoidRootPart.CFrame = PosMob
                            v.HumanoidRootPart.CanCollide = true
                            if v.Humanoid:FindFirstChild("Animator") then
                                v.Humanoid.Animator:Destroy()
                            end
                            sethiddenproperty(plr, "SimulationRadius", math.huge)
                            v.HumanoidRootPart.Size = Vector3.new(10, 10, 10)
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                        end
                    end
                end
            end
        end)
    end
end)
